# Error Codes and Descriptions for Bash

# Syntax Errors
# - Missing a semicolon at the end of a command, mismatched parentheses, etc.
# - Exit Status Code: 2
SYNTAX_ERROR=2 //handle on parsing

# Command Not Found
# - Typing a command with a typo or trying to execute a non-existent command.
# - Exit Status Code: 127
COMMAND_NOT_FOUND=127 //IMPLEMENTED

# Permission Denied
# - Trying to write to a file without the write permission, or executing a script without execute permission.
# - Exit Status Code: 126
PERMISSION_DENIED=126 //IMPLEMENTED

# Variable Undefined
# - Trying to use a variable that has not been defined.
# - Exit Status Code: N/A (depends on context)

# File Not Found
# - The file or directory specified in the command doesn't exist.
# - Exit Status Code: 1
FILE_NOT_FOUND=1 //where we use open

# Argument-related Errors
# - Incorrect or missing arguments provided to a command.
# - Exit Status Code: N/A (depends on context)

# Exit Code Errors
# - Commands or scripts often return exit codes to indicate success or failure.
# - Non-zero exit codes usually signify an error.
# - Exit Status Code: Depends on the specific command or script.

# Redirect Errors
# - Issues related to input/output redirection.
# - Attempting to redirect output to a file without write permissions.
# - Exit Status Code: N/A (depends on context)

# Pipe Errors
# - Issues related to the use of pipes in a command sequence.
# - Piping output from a command that produces an error.
# - Exit Status Code: Depends on the specific command or script.

# Quoting Errors
# - Incorrect or mismatched quoting in commands or scripts.
# - Forgetting to close a quote, or using the wrong type of quote.
# - Exit Status Code: Depends on the specific command or script.

# Environment Variable Errors
# - Issues with environment variables.
# - Referencing an undefined environment variable or using it incorrectly.
# - Exit Status Code: N/A (depends on context)

# Invalid Input
# - Commands might produce errors if provided with unexpected or invalid input.
# - Providing a non-integer value where an integer is expected.
# - Exit Status Code: Depends on the specific command or script.

# Disk Full
# - Attempting to write to disk when there is not enough space.
# - Trying to create a file when the disk is full.
# - Exit Status Code: 1
DISK_FULL=1 //where we use open 
