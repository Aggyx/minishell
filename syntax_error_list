# Syntax Errors in Bash

# 1. Missing Semicolon
# - Example: command1 command2
# - Explanation: The absence of a semicolon or other command separator between commands can result in a syntax error.
# - Exit Status Code: 2
MISSING_SEMICOLON=2

# 2. Unmatched Quotes
# - Example: echo "Hello World
# - Explanation: Quotes must be properly matched. Unclosed quotes or mismatched quote types can lead to syntax errors.
# - Exit Status Code: 2
UNMATCHED_QUOTES=2

# 3. Unmatched Parentheses
# - Example: if [ $var -eq 1 then echo "Equal"; fi
# - Explanation: Parentheses in conditional statements or loops must be properly matched.
# - Exit Status Code: 2
UNMATCHED_PARENTHESES=2

# 4. Incorrect Command Termination
# - Example: command1 && command2 || command3
# - Explanation: Each command in a sequence must be terminated correctly. Missing '&&' or '||' can cause syntax errors.
# - Exit Status Code: 2
INCORRECT_COMMAND_TERMINATION=2

# 5. Unrecognized or Misplaced Keywords
# - Example: if [ condition ]; thn echo "True"; fi
# - Explanation: Spelling errors or misplacement of keywords (e.g., 'then', 'else') can result in syntax errors.
# - Exit Status Code: 2
UNRECOGNIZED_KEYWORDS=2

# 6. Missing or Extra Brackets
# - Example: if [ -f file.txt
# - Explanation: Conditional statements must have properly matched brackets.
# - Exit Status Code: 2
BRACKET_MISMATCH=2

# 7. Improperly Formed Function Definitions
# - Example: function myFunction { echo "Hello"; }
# - Explanation: Functions must be defined with the 'function' keyword or without it, but not both.
# - Exit Status Code: 2
IMPROPER_FUNCTION_DEFINITION=2

# 8. Misuse of Variables
# - Example: $var = "value"
# - Explanation: Variable assignments should not have spaces around the assignment operator '='.
# - Exit Status Code: 2
MISUSE_OF_VARIABLES=2

# 9. Misplaced or Unmatched Backquotes
# - Example: echo `command1 ` command2`
# - Explanation: Backquotes (``) for command substitution must be properly matched and placed.
# - Exit Status Code: 2
MISPLACED_BACKQUOTES=2

# 10. Misuse of Redirection
# - Example: echo "Hello" > > output.txt
# - Explanation: Redirection operators ('>', '>>', '<') should be used correctly without redundant or misplaced symbols.
# - Exit Status Code: 2
MISUSE_OF_REDIRECTION=2
