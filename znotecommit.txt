Este archivo nos servira como historial de commentarios de commits.

25/10
He cambiado los headers includes.
He procurado que mis funciones del parser pasen la norminette
cambiar Makefile para que compile todos los arcihvos
compila correctamente.

26/10
he añadido el parseo por SINGLE and DOUBLE quotes. (por mejorar)
ahora los tokens de commandos/flags/params/operadores estan en una lista enlazada.
Procuro reinitializar esa lista (liberar memoria) para reutilizar el puntero en la proxima entrada de commando.
falta por testear.
He cambiado el prompt por un cuchillo por que la shell va sangrar de tantos tests.
Compila corrrectamente.

27/11
-arreglar el echo sin args

muchos commits en git despues...

5/01/24
- export muestra varaibles en orden alphabetico
- las palabras en encomillado simple no se expanden.
- expansión de $? para codigos de error quedan bugs
- correción de bugs.
	- readline vacío vuelve a mostrar el prompt.
	- stderr: COMMAND NOT FOUND. --> implementado 
	- expansión de una variable inexistente devuelve un salto de linea.

15/01/24
- Nuevo código para hacer las expansiones ahora con my_realloc. 

16/01/24
- Export imita el export original. (faltaria la busqueda por orden alpha).
- arreglos de bugs en el cd.
- limpie unos cuantos leaks en el export ---> comprobar si faltan en todo el codigo.
- strjoinfree strjoinfrees1 strjoinfrees2 protegidos

QUEDA POR HACER:
TA ÇA A FAIRE SALE TCHOIN TRAVAILLEEEEEEEEEEE

- Renombrar, mejorar/aclarar architectura, norminette ----> HECHO aunque sigue habiendo errores de normi por comentarios(ya se quitaran) y una funcion en expander que hay que quitarle un arg.
- Redirecciónes de entrada < <<
- Señales
- Códigos de error
- Pipes
- Códigos de error del proceso hijo (despues PIPES);

# **************************************************************************** #
#                                COMPARE PARSING                               #
# **************************************************************************** #

### comparing your input parsing to bash ###
/bin/echo ""$?"" done

/bin/echo $?"42" done

/bin/echo ''$?''"42" 

/bin/echo '"$USER"'

/bin/echo "'$USER'"

/bin/echo ""'$USER'"" 

/bin/echo '"'$USER'"' 

/bin/echo "''$USER''"

/bin/echo "''$USER''"

echo '"'  "$USER"   '"'

/bin/echo $"HOME"$USER

/bin/echo $"HOM"E$USER

/bin/echo "exit_code ->$? user ->$USER home -> $HOME"
 
/bin/echo $"HOME"

/bin/echo $"42$"

/bin/echo "$ "

/bin/echo hi >./outfiles/outfile01 | /bin/echo bye NOP

/bin/echo <123 <456 hi | /bin/echo 42 NOP

/bin/echo '$='

/bin/echo '$ '

/bin/echo "$?"

/bin/echo '$?'

/bin/echo "'$?'"	

/bin/echo \$USER

/bin/echo \\$USER

/bin/echo \\\$USER

/bin/echo \\\\$USER

/bin/echo \\\\\$USER

/bin/echo \\\\\\\\\$USER

/bin/echo \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\$USER \$PATH \\$PWD à voir.... toutes ces contrebarres...

/bin/echo "cat lol.c | cat > lol.c"		YES

/bin/echo "cat lol.c '|' cat > lol.c"		YES

/bin/echo '$USER' "$USER" "text  ' text"		YES

/bin/echo $USER =intergalaktikus miaf*szomez 

/bin/echo -n"-n" bonjour

/bin/echo "'$USER'"

/bin/echo " '$USER' "

/bin/echo text"$USER"

/bin/echo text"'$USER'" ' $USER '        NOP

/bin/echo "text"   "$USER"    "$USER"

/bin/echo '              $USER          '

/bin/echo ''''''''''$USER''''''''''

/bin/echo """"""""$USER""""""""

/bin/echo '""""""""$USER""""""""' 			NOP

/bin/echo ""'""""""$USER""""""'"" 			NOP

/bin/echo """"""""'$USER'"""""""" 			NOP

/bin/echo """""""'"$USER"'"""""""			NOP

/bin/echo """"""'""$USER""'"""""" 

/bin/echo ""'""'""""$USER""""'""'""

/bin/echo '""'""'""""$USER""""'""'""'

/bin/echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER ''

/bin/echo "text" "text$USER" ... "$USER"

/bin/echo

/bin/echo ''

/bin/echo ""

/bin/echo '' ""

/bin/echo /bin/echo

/bin/echo test1

/bin/echo 'test1'

/bin/echo "/bin/echo hallo"

/bin/echo /bin/echo"1"

/bin/echo "test1 test2"

/bin/echo "test1  test2" test3

/bin/echo " test1 test2 " 'test3 '

/bin/echo test1		test2

/bin/echo $USER$TESTNOTFOUND$HOME$

/bin/echo $USER$TESTNOTFOUND$HOME$WTF$PWD

/bin/echo -n test1

/bin/echo -n "test1 test2"

/bin/echo -n "test1 test2" test3

/bin/echo -n " test1 test2 " 'test3 '

/bin/echo -n test1		test2

/bin/echo test1 -n

/bin/echo "test1 -n" 

/bin/echo -n -n test1

/bin/echo -n -n -n -n -n test1

/bin/echo "  -nn "

/bin/echo "-n test1 -n test2"

/bin/echo "test1 -n test2"

/bin/echo ~42

/bin/echo -n -n -nasd

/bin/echo -n -n -n-nnnnn

/bin/echo -n -nnnnnnn -n -nnn -nnnnn -n-n

/bin/echo -n -nnnnnnn -n -nnn -nnnnn -n feel my pain

/bin/echo -n -n -n-n

/bin/echo "'totally logical'"

/bin/echo 'totally logical'

/bin/echo ''totally logical''

/bin/echo ""'totally logical'""

exec_test 'echo test > ls ; cat ls'
exec_test 'echo test > ls >> ls >> ls ; echo test >> ls; cat ls'
exec_test '> lol echo test lol; cat lol'
exec_test '>lol echo > test>lol>test>>lol>test mdr >lol test >test; cat test'
exec_test 'cat < ls'
exec_test 'cat < ls > ls'